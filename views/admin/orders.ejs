<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin - Order Management</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
    <style>
        .admin-sidebar {
            width: 250px;
            height: 100vh;
            position: fixed;
            background-color: #212529;
            color: white;
        }

        .admin-content {
            margin-left: 250px;
            padding: 20px;
        }

        .order-status {
            width: 120px;
        }

        @media (max-width: 991px) {
            .admin-sidebar {
                width: 100%;
                height: auto;
                position: relative;
            }

            .admin-content {
                margin-left: 0;
            }
        }
    </style>
</head>

<body>
    <div class="admin-sidebar p-3">
        <h4>ShopEase Admin</h4>
        <hr>
        <ul class="nav flex-column">
            <li class="nav-item">
                <a class="nav-link text-white-50" href="/products">
                    <i class="bi bi-box-seam"></i> Products
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link active text-white" href="/orders">
                    <i class="bi bi-receipt"></i> Orders
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-white-50" href="/inventory">
                    <i class="bi bi-clipboard-data"></i> Inventory
                </a>
            </li>
        </ul>
    </div>

    <div class="admin-content">
        <h2 class="mb-4">Order Management</h2>

        <div class="card mb-4">
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-md-3">
                        <label class="form-label">Status:</label>
                        <select class="form-select" id="statusFilter">
                            <option value="">All Orders</option>
                            <option value="pending">Pending</option>
                            <option value="processing">Processing</option>
                            <option value="shipped">Shipped</option>
                            <option value="delivered">Delivered</option>
                            <option value="cancelled">Cancelled</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">From:</label>
                        <input type="date" class="form-control" id="dateFrom">
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">To:</label>
                        <input type="date" class="form-control" id="dateTo">
                    </div>
                    <div class="col-md-3 d-flex align-items-end">
                        <button class="btn btn-primary w-100" id="filterBtn">
                            <i class="bi bi-funnel"></i> Filter
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <div class="card">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table" id="ordersTable">
                        <thead>
                            <tr>
                                <th>Order ID</th>
                                <th>Customer</th>
                                <th>Date</th>
                                <th>Amount</th>
                                <th class="order-status">Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- Orders will be loaded here -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- Order Detail Modal -->
        <div class="modal fade" id="orderModal" tabindex="-1" aria-hidden="true">
            <div class="modal-dialog modal-xl">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Order Details - <span id="orderIdTitle"></span></h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="row mb-4">
                            <div class="col-md-6">
                                <h6>Customer Information</h6>
                                <p id="customerInfo"></p>
                            </div>
                            <div class="col-md-6">
                                <h6>Shipping Address</h6>
                                <p id="shippingAddress"></p>
                            </div>
                        </div>

                        <h6>Order Items</h6>
                        <table class="table table-bordered" id="orderItemsTable">
                            <thead>
                                <tr>
                                    <th>Product</th>
                                    <th>Price</th>
                                    <th>Quantity</th>
                                    <th>Total</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>

                        <div class="row justify-content-end">
                            <div class="col-md-4">
                                <table class="table">
                                    <tr>
                                        <th>Subtotal:</th>
                                        <td id="orderSubtotal">$0.00</td>
                                    </tr>
                                    <tr>
                                        <th>Shipping:</th>
                                        <td id="orderShipping">$0.00</td>
                                    </tr>
                                    <tr>
                                        <th>Tax:</th>
                                        <td id="orderTax">$0.00</td>
                                    </tr>
                                    <tr class="table-active">
                                        <th>Total:</th>
                                        <td id="orderTotal">$0.00</td>
                                    </tr>
                                </table>
                            </div>
                        </div>

                        <div class="mt-4">
                            <label class="form-label">Update Status:</label>
                            <div class="d-flex gap-2">
                                <select class="form-select" id="orderStatus">
                                    <option value="pending">Pending</option>
                                    <option value="processing">Processing</option>
                                    <option value="shipped">Shipped</option>
                                    <option value="delivered">Delivered</option>
                                    <option value="cancelled">Cancelled</option>
                                </select>
                                <button class="btn btn-primary" id="updateStatusBtn">Update</button>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-success" id="printOrderBtn">
                            <i class="bi bi-printer"></i> Print
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const orderModal = new bootstrap.Modal('#orderModal');
            const ordersTable = document.getElementById('ordersTable').getElementsByTagName('tbody')[0];

            // Sample order data
            let orders = [
                {
                    id: 'ORD-1001',
                    customer: 'John Doe',
                    email: 'john@example.com',
                    phone: '(555) 123-4567',
                    date: '2023-06-15',
                    amount: 199.99,
                    status: 'processing',
                    address: '123 Main St, Apt 4B, New York, NY 10001',
                    items: [
                        { product: 'Premium Wireless Headphones', price: 199.99, quantity: 1 }
                    ],
                    subtotal: 199.99,
                    shipping: 0,
                    tax: 16.00
                },
                {
                    id: 'ORD-1002',
                    customer: 'Jane Smith',
                    email: 'jane@example.com',
                    phone: '(555) 987-6543',
                    date: '2023-06-10',
                    amount: 349.98,
                    status: 'shipped',
                    address: '456 Oak Ave, Boston, MA 02108',
                    items: [
                        { product: 'Smart Watch Pro', price: 249.99, quantity: 1 },
                        { product: 'Wireless Charger', price: 39.99, quantity: 2 }
                    ],
                    subtotal: 329.97,
                    shipping: 9.99,
                    tax: 27.20
                }
            ];

            // Load orders into table
            function loadOrders(filterStatus = '', dateFrom = '', dateTo = '') {
                ordersTable.innerHTML = '';

                let filteredOrders = orders;

                if (filterStatus) {
                    filteredOrders = filteredOrders.filter(order => order.status === filterStatus);
                }

                if (dateFrom) {
                    filteredOrders = filteredOrders.filter(order => order.date >= dateFrom);
                }

                if (dateTo) {
                    filteredOrders = filteredOrders.filter(order => order.date <= dateTo);
                }

                filteredOrders.forEach(order => {
                    const row = ordersTable.insertRow();
                    row.innerHTML = `
                        <td>${order.id}</td>
                        <td>${order.customer}</td>
                        <td>${order.date}</td>
                        <td>$${order.amount.toFixed(2)}</td>
                        <td>
                            <span class="badge ${getStatusBadgeClass(order.status)}">
                                ${order.status.charAt(0).toUpperCase() + order.status.slice(1)}
                            </span>
                        </td>
                        <td>
                            <button class="btn btn-sm btn-outline-primary view-btn" data-id="${order.id}">
                                <i class="bi bi-eye"></i>
                            </button>
                            <button class="btn btn-sm btn-outline-success ship-btn" data-id="${order.id}">
                                <i class="bi bi-truck"></i>
                            </button>
                        </td>
                    `;
                });

                // Add event listeners
                document.querySelectorAll('.view-btn').forEach(btn => {
                    btn.addEventListener('click', viewOrderDetails);
                });

                document.querySelectorAll('.ship-btn').forEach(btn => {
                    btn.addEventListener('click', shipOrder);
                });
            }

            // View order details
            function viewOrderDetails(e) {
                const orderId = e.currentTarget.getAttribute('data-id');
                const order = orders.find(o => o.id === orderId);

                if (order) {
                    document.getElementById('orderIdTitle').textContent = order.id;
                    document.getElementById('customerInfo').innerHTML = `
                        ${order.customer}<br>
                        ${order.email}<br>
                        ${order.phone}
                    `;
                    document.getElementById('shippingAddress').textContent = order.address;

                    // Load order items
                    const itemsTable = document.getElementById('orderItemsTable').getElementsByTagName('tbody')[0];
                    itemsTable.innerHTML = '';

                    order.items.forEach(item => {
                        const row = itemsTable.insertRow();
                        row.innerHTML = `
                            <td>${item.product}</td>
                            <td>$${item.price.toFixed(2)}</td>
                            <td>${item.quantity}</td>
                            <td>$${(item.price * item.quantity).toFixed(2)}</td>
                        `;
                    });

                    // Set order totals
                    document.getElementById('orderSubtotal').textContent = `$${order.subtotal.toFixed(2)}`;
                    document.getElementById('orderShipping').textContent = `$${order.shipping.toFixed(2)}`;
                    document.getElementById('orderTax').textContent = `$${order.tax.toFixed(2)}`;
                    document.getElementById('orderTotal').textContent = `$${order.amount.toFixed(2)}`;

                    // Set current status
                    document.getElementById('orderStatus').value = order.status;

                    // Store current order ID for status update
                    document.getElementById('updateStatusBtn').setAttribute('data-id', order.id);

                    orderModal.show();
                }
            }

            // Ship order (quick action)
            function shipOrder(e) {
                const orderId = e.currentTarget.getAttribute('data-id');
                const orderIndex = orders.findIndex(o => o.id === orderId);

                if (orderIndex !== -1 && orders[orderIndex].status !== 'shipped') {
                    if (confirm(`Mark order ${orderId} as shipped?`)) {
                        orders[orderIndex].status = 'shipped';
                        loadOrders(
                            document.getElementById('statusFilter').value,
                            document.getElementById('dateFrom').value,
                            document.getElementById('dateTo').value
                        );
                    }
                }
            }

            // Update order status
            document.getElementById('updateStatusBtn').addEventListener('click', function () {
                const orderId = this.getAttribute('data-id');
                const newStatus = document.getElementById('orderStatus').value;
                const orderIndex = orders.findIndex(o => o.id === orderId);

                if (orderIndex !== -1) {
                    orders[orderIndex].status = newStatus;
                    orderModal.hide();
                    loadOrders(
                        document.getElementById('statusFilter').value,
                        document.getElementById('dateFrom').value,
                        document.getElementById('dateTo').value
                    );
                }
            });

            // Filter orders
            document.getElementById('filterBtn').addEventListener('click', function () {
                loadOrders(
                    document.getElementById('statusFilter').value,
                    document.getElementById('dateFrom').value,
                    document.getElementById('dateTo').value
                );
            });

            // Print order
            document.getElementById('printOrderBtn').addEventListener('click', function () {
                window.print();
            });

            // Helper function for status badge class
            function getStatusBadgeClass(status) {
                switch (status) {
                    case 'pending': return 'bg-warning';
                    case 'processing': return 'bg-info';
                    case 'shipped': return 'bg-primary';
                    case 'delivered': return 'bg-success';
                    case 'cancelled': return 'bg-danger';
                    default: return 'bg-secondary';
                }
            }

            // Initial load
            loadOrders();
        });
    </script>
</body>

</html>
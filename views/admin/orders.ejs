<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin - Order Management</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
    <style>
        .admin-sidebar {
            width: 250px;
            height: 100vh;
            position: fixed;
            background-color: #212529;
            color: white;
        }
        .admin-content {
            margin-left: 250px;
            padding: 20px;
        }
        .order-status {
            width: 120px;
        }
        @media (max-width: 991px) {
            .admin-sidebar {
                width: 100%;
                height: auto;
                position: relative;
            }
            .admin-content {
                margin-left: 0;
            }
        }
    </style>
</head>

<body>
    <div class="admin-sidebar p-3">
        <h4>ShopEase Admin</h4>
        <hr>
        <ul class="nav flex-column">
            <li class="nav-item">
                <a class="nav-link text-white-50" href="products">
                    <i class="bi bi-box-seam"></i> Products
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link active text-white" href="orders">
                    <i class="bi bi-receipt"></i> Orders
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-white-50" href="inventory">
                    <i class="bi bi-clipboard-data"></i> Inventory
                </a>
            </li>
        </ul>
    </div>

    <div class="admin-content">
        <h2 class="mb-4">Order Management</h2>

        <div class="card mb-4">
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-md-3">
                        <label class="form-label">Status:</label>
                        <select class="form-select" id="statusFilter">
                            <option value="">All Orders</option>
                            <option value="pending">Pending</option>
                            <option value="processing">Processing</option>
                            <option value="shipped">Shipped</option>
                            <option value="delivered">Delivered</option>
                            <option value="cancelled">Cancelled</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">From:</label>
                        <input type="date" class="form-control" id="dateFrom">
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">To:</label>
                        <input type="date" class="form-control" id="dateTo">
                    </div>
                    <div class="col-md-3 d-flex align-items-end">
                        <button class="btn btn-primary w-100" id="filterBtn">
                            <i class="bi bi-funnel"></i> Filter
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <div class="card">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table" id="ordersTable">
                        <thead>
                            <tr>
                                <th>Order ID</th>
                                <th>Customer</th>
                                <th>Date</th>
                                <th>Amount</th>
                                <th class="order-status">Status</th>
                                <th>Payment</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="ordersTableBody">
                            <!-- Orders will be loaded here -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- Order Detail Modal -->
        <div class="modal fade" id="orderModal" tabindex="-1" aria-hidden="true">
            <div class="modal-dialog modal-xl">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Order Details - #<span id="orderIdTitle"></span></h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="row mb-4">
                            <div class="col-md-6">
                                <h6>Customer Information</h6>
                                <p id="customerInfo"></p>
                            </div>
                            <div class="col-md-6">
                                <h6>Shipping Address</h6>
                                <p id="shippingAddress"></p>
                            </div>
                        </div>

                        <h6>Order Items</h6>
                        <table class="table table-bordered" id="orderItemsTable">
                            <thead>
                                <tr>
                                    <th>Product</th>
                                    <th>Price</th>
                                    <th>Quantity</th>
                                    <th>Total</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>

                        <div class="row justify-content-end">
                            <div class="col-md-4">
                                <table class="table">
                                    <tr>
                                        <th>Subtotal:</th>
                                        <td id="orderSubtotal">$0.00</td>
                                    </tr>
                                    <tr>
                                        <th>Shipping:</th>
                                        <td id="orderShipping">$0.00</td>
                                    </tr>
                                    <tr>
                                        <th>Tax:</th>
                                        <td id="orderTax">$0.00</td>
                                    </tr>
                                    <tr class="table-active">
                                        <th>Total:</th>
                                        <td id="orderTotal">$0.00</td>
                                    </tr>
                                </table>
                            </div>
                        </div>

                        <div class="mt-4">
                            <label class="form-label">Update Status:</label>
                            <div class="d-flex gap-2">
                                <select class="form-select" id="orderStatus">
                                    <option value="pending">Pending</option>
                                    <option value="processing">Processing</option>
                                    <option value="shipped">Shipped</option>
                                    <option value="delivered">Delivered</option>
                                    <option value="cancelled">Cancelled</option>
                                </select>
                                <button class="btn btn-primary" id="updateStatusBtn">Update</button>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-success" id="printOrderBtn">
                            <i class="bi bi-printer"></i> Print
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const orderModal = new bootstrap.Modal('#orderModal');
            const ordersTableBody = document.getElementById('ordersTableBody');
            let currentOrderId = null;

            // Load orders from API
            async function loadOrders() {
                try {
                    const response = await fetch('http://localhost:3000/orders/api/all');
                    if (!response.ok) {
                        throw new Error('Failed to fetch orders');
                    }
                    const orders = await response.json();
                    renderOrders(orders);
                } catch (error) {
                    console.error('Error loading orders:', error);
                    alert('Failed to load orders');
                }
            }

            // Render orders in table
            function renderOrders(orders) {
                ordersTableBody.innerHTML = '';
                
                orders.forEach(order => {
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td>#${order.order_id}</td>
                        <td>${order.email}</td>
                        <td>${new Date(order.created_at).toLocaleDateString()}</td>
                        <td>$${parseFloat(order.total_amount).toFixed(2)}</td>
                        <td>
                            <span class="badge ${getStatusBadgeClass(order.status)}">
                                ${order.status.charAt(0).toUpperCase() + order.status.slice(1)}
                            </span>
                        </td>
                        <td>${order.payment_method}</td>
                        <td>
                            <button class="btn btn-sm btn-outline-primary view-btn" 
                                    data-id="${order.order_id}">
                                <i class="bi bi-eye"></i> View
                            </button>
                        </td>
                    `;
                    ordersTableBody.appendChild(row);
                });

                // Add event listeners to view buttons
                document.querySelectorAll('.view-btn').forEach(btn => {
                    btn.addEventListener('click', viewOrderDetails);
                });
            }

            // View order details
            async function viewOrderDetails(e) {
                const orderId = e.currentTarget.getAttribute('data-id');
                currentOrderId = orderId;
                
                try {
                    const response = await fetch(`http://localhost:3000/orders/api/${orderId}`);
                    if (!response.ok) {
                        throw new Error('Failed to fetch order details');
                    }
                    const order = await response.json();
                    
                    // Fill modal with order details
                    document.getElementById('orderIdTitle').textContent = order.order_id;
                    document.getElementById('customerInfo').innerHTML = `
                        ${order.email}<br>
                        ${order.shipping_address.split(',')[0]}<br>
                        ${order.shipping_address.split(',')[1]}
                    `;
                    document.getElementById('shippingAddress').textContent = order.shipping_address;

                    // Set current status in select
                    document.getElementById('orderStatus').value = order.status;

                    // For now, we'll use sample items since they're not in your API response
                    const itemsTable = document.getElementById('orderItemsTable').getElementsByTagName('tbody')[0];
                    itemsTable.innerHTML = `
                        <tr>
                            <td>Sample Product</td>
                            <td>$${parseFloat(order.total_amount).toFixed(2)}</td>
                            <td>1</td>
                            <td>$${parseFloat(order.total_amount).toFixed(2)}</td>
                        </tr>
                    `;

                    // Set order totals
                    document.getElementById('orderSubtotal').textContent = `$${parseFloat(order.total_amount).toFixed(2)}`;
                    document.getElementById('orderShipping').textContent = '$0.00';
                    document.getElementById('orderTax').textContent = '$0.00';
                    document.getElementById('orderTotal').textContent = `$${parseFloat(order.total_amount).toFixed(2)}`;

                    orderModal.show();
                } catch (error) {
                    console.error('Error loading order details:', error);
                    alert('Failed to load order details');
                }
            }

            // Update order status
            document.getElementById('updateStatusBtn').addEventListener('click', async function () {
                if (!currentOrderId) return;
                
                const newStatus = document.getElementById('orderStatus').value;
                
                try {
                    const response = await fetch(`http://localhost:3000/orders/api/${currentOrderId}/status`, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ status: newStatus })
                    });
                    
                    if (!response.ok) {
                        throw new Error('Failed to update order status');
                    }
                    
                    orderModal.hide();
                    loadOrders(); // Refresh the orders list
                    alert('Order status updated successfully');
                } catch (error) {
                    console.error('Error updating order status:', error);
                    alert('Failed to update order status');
                }
            });

            // Filter orders
            document.getElementById('filterBtn').addEventListener('click', async function () {
                const status = document.getElementById('statusFilter').value;
                const from = document.getElementById('dateFrom').value;
                const to = document.getElementById('dateTo').value;
                
                try {
                    let url = 'http://localhost:3000/orders/api/all?';
                    if (status) url += `status=${status}&`;
                    if (from) url += `from=${from}&`;
                    if (to) url += `to=${to}`;
                    
                    const response = await fetch(url);
                    if (!response.ok) {
                        throw new Error('Failed to fetch filtered orders');
                    }
                    const orders = await response.json();
                    renderOrders(orders);
                } catch (error) {
                    console.error('Error filtering orders:', error);
                    alert('Failed to filter orders');
                }
            });

            // Print order
            document.getElementById('printOrderBtn').addEventListener('click', function () {
                window.print();
            });

            // Helper function for status badge class
            function getStatusBadgeClass(status) {
                switch (status) {
                    case 'pending': return 'bg-warning';
                    case 'processing': return 'bg-info';
                    case 'shipped': return 'bg-primary';
                    case 'delivered': return 'bg-success';
                    case 'cancelled': return 'bg-danger';
                    default: return 'bg-secondary';
                }
            }

            // Initial load
            loadOrders();
        });
    </script>
</body>
</html>
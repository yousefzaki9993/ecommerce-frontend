<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin - Order Management</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
    <style>
        .admin-sidebar {
            width: 250px;
            height: 100vh;
            position: fixed;
            background-color: #212529;
            color: white;
        }
        .admin-content {
            margin-left: 250px;
            padding: 20px;
        }
        .order-status {
            width: 120px;
        }
        @media (max-width: 991px) {
            .admin-sidebar {
                width: 100%;
                height: auto;
                position: relative;
            }
            .admin-content {
                margin-left: 0;
            }
        }
    </style>
</head>

<body>
    <div class="admin-sidebar p-3">
        <h4>ShopEase Admin</h4>
        <hr>
        <ul class="nav flex-column">
            <li class="nav-item">
                <a class="nav-link text-white-50" href="/admin/products">
                    <i class="bi bi-box-seam"></i> Products
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link active text-white" href="/admin/orders">
                    <i class="bi bi-receipt"></i> Orders
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-white-50" href="/admin/inventory">
                    <i class="bi bi-clipboard-data"></i> Inventory
                </a>
            </li>
        </ul>
    </div>

    <div class="admin-content">
        <h2 class="mb-4">Order Management</h2>

        <div class="card mb-4">
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-md-3">
                        <label class="form-label">Status:</label>
                        <select class="form-select" id="statusFilter">
                            <option value="">All Orders</option>
                            <option value="pending" <%= statusFilter === 'pending' ? 'selected' : '' %>>Pending</option>
                            <option value="processing" <%= statusFilter === 'processing' ? 'selected' : '' %>>Processing</option>
                            <option value="shipped" <%= statusFilter === 'shipped' ? 'selected' : '' %>>Shipped</option>
                            <option value="delivered" <%= statusFilter === 'delivered' ? 'selected' : '' %>>Delivered</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">From:</label>
                        <input type="date" class="form-control" id="dateFrom" value="<%= dateFrom || '' %>">
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">To:</label>
                        <input type="date" class="form-control" id="dateTo" value="<%= dateTo || '' %>">
                    </div>
                    <div class="col-md-3 d-flex align-items-end">
                        <button class="btn btn-primary w-100" id="filterBtn">
                            <i class="bi bi-funnel"></i> Filter
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <div class="card">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table" id="ordersTable">
                        <thead>
                            <tr>
                                <th>Order ID</th>
                                <th>User ID</th>
                                <th>Date</th>
                                <th>Amount</th>
                                <th class="order-status">Status</th>
                                <th>Payment</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% orders.forEach(order => { %>
                                <tr>
                                    <td>#<%= order.id %></td>
                                    <td><%= order.user_id %></td>
                                    <td><%= new Date(order.created_at).toLocaleDateString() %></td>
                                    <td>$<%= order.total_amount.toFixed(2) %></td>
                                    <td>
                                        <span class="badge <%= 
                                            order.status === 'pending' ? 'bg-warning' :
                                            order.status === 'processing' ? 'bg-info' :
                                            order.status === 'shipped' ? 'bg-primary' :
                                            order.status === 'delivered' ? 'bg-success' : 'bg-secondary'
                                        %>">
                                            <%= order.status.charAt(0).toUpperCase() + order.status.slice(1) %>
                                        </span>
                                    </td>
                                    <td><%= order.payment_method %></td>
                                    <td>
                                        <button class="btn btn-sm btn-outline-primary view-btn" 
                                                data-id="<%= order.id %>"
                                                data-bs-toggle="modal" 
                                                data-bs-target="#orderModal">
                                            <i class="bi bi-eye"></i> View
                                        </button>
                                    </td>
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- Order Detail Modal -->
        <div class="modal fade" id="orderModal" tabindex="-1" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Order Details - #<span id="orderIdTitle"></span></h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="row mb-4">
                            <div class="col-md-6">
                                <h6>Order Information</h6>
                                <div class="mb-2"><strong>Order Date:</strong> <span id="orderDate"></span></div>
                                <div class="mb-2"><strong>Payment Method:</strong> <span id="paymentMethod"></span></div>
                                <div class="mb-2"><strong>Status:</strong> <span id="orderStatusBadge"></span></div>
                            </div>
                            <div class="col-md-6">
                                <h6>Shipping Address</h6>
                                <p id="shippingAddress"></p>
                            </div>
                        </div>

                        <h6>Order Items</h6>
                        <table class="table table-bordered" id="orderItemsTable">
                            <thead>
                                <tr>
                                    <th>Product</th>
                                    <th>Price</th>
                                    <th>Quantity</th>
                                    <th>Total</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>

                        <div class="row justify-content-end">
                            <div class="col-md-4">
                                <table class="table">
                                    <tr>
                                        <th>Subtotal:</th>
                                        <td id="orderSubtotal">$0.00</td>
                                    </tr>
                                    <tr>
                                        <th>Shipping:</th>
                                        <td id="orderShipping">$0.00</td>
                                    </tr>
                                    <tr>
                                        <th>Tax:</th>
                                        <td id="orderTax">$0.00</td>
                                    </tr>
                                    <tr class="table-active">
                                        <th>Total:</th>
                                        <td id="orderTotal">$0.00</td>
                                    </tr>
                                </table>
                            </div>
                        </div>

                        <div class="mt-4">
                            <label class="form-label">Update Status:</label>
                            <div class="d-flex gap-2">
                                <select class="form-select" id="orderStatusSelect">
                                    <option value="pending">Pending</option>
                                    <option value="processing">Processing</option>
                                    <option value="shipped">Shipped</option>
                                    <option value="delivered">Delivered</option>
                                </select>
                                <button class="btn btn-primary" id="updateStatusBtn">Update</button>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-success" id="printOrderBtn">
                            <i class="bi bi-printer"></i> Print
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const orderModal = new bootstrap.Modal('#orderModal');
            const orderModalEl = document.getElementById('orderModal');
            
            // Load order details when modal opens
            orderModalEl.addEventListener('show.bs.modal', async function (event) {
                const button = event.relatedTarget;
                const orderId = button.getAttribute('data-id');
                
                try {
                    const response = await fetch(`/admin/orders/${orderId}/details`);
                    if (!response.ok) throw new Error('Network response was not ok');
                    
                    const order = await response.json();
                    
                    // Fill order information
                    document.getElementById('orderIdTitle').textContent = order.id;
                    document.getElementById('orderDate').textContent = new Date(order.created_at).toLocaleString();
                    document.getElementById('paymentMethod').textContent = order.payment_method;
                    document.getElementById('shippingAddress').textContent = order.shipping_address;

                    // Set status badge
                    const statusBadge = document.getElementById('orderStatusBadge');
                    statusBadge.innerHTML = `
                        <span class="badge ${getStatusBadgeClass(order.status)}">
                            ${order.status.charAt(0).toUpperCase() + order.status.slice(1)}
                        </span>
                    `;

                    // Set current status in select
                    document.getElementById('orderStatusSelect').value = order.status;
                    document.getElementById('updateStatusBtn').setAttribute('data-id', order.id);

                    // Load order items (assuming items are included in the response)
                    const itemsTable = document.getElementById('orderItemsTable').getElementsByTagName('tbody')[0];
                    itemsTable.innerHTML = '';

                    if (order.items && order.items.length > 0) {
                        order.items.forEach(item => {
                            const row = itemsTable.insertRow();
                            row.innerHTML = `
                                <td>${item.product_name || 'Product'}</td>
                                <td>$${item.price ? item.price.toFixed(2) : '0.00'}</td>
                                <td>${item.quantity || 1}</td>
                                <td>$${item.price && item.quantity ? (item.price * item.quantity).toFixed(2) : '0.00'}</td>
                            `;
                        });
                    }

                    // Set order totals
                    document.getElementById('orderSubtotal').textContent = `$${order.total_amount ? order.total_amount.toFixed(2) : '0.00'}`;
                    document.getElementById('orderShipping').textContent = '$0.00'; // Adjust if you have shipping data
                    document.getElementById('orderTax').textContent = '$0.00'; // Adjust if you have tax data
                    document.getElementById('orderTotal').textContent = `$${order.total_amount ? order.total_amount.toFixed(2) : '0.00'}`;

                } catch (error) {
                    console.error('Error loading order details:', error);
                    alert('Failed to load order details');
                }
            });

            // Update order status
            document.getElementById('updateStatusBtn').addEventListener('click', async function () {
                const orderId = this.getAttribute('data-id');
                const newStatus = document.getElementById('orderStatusSelect').value;
                
                try {
                    const response = await fetch(`/admin/orders/${orderId}/status`, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ status: newStatus })
                    });
                    
                    if (!response.ok) throw new Error('Network response was not ok');
                    
                    orderModal.hide();
                    window.location.reload();
                } catch (error) {
                    console.error('Error updating order status:', error);
                    alert('Failed to update order status');
                }
            });

            // Filter orders
            document.getElementById('filterBtn').addEventListener('click', function () {
                const status = document.getElementById('statusFilter').value;
                const from = document.getElementById('dateFrom').value;
                const to = document.getElementById('dateTo').value;
                
                let url = '/admin/orders?';
                if (status) url += `status=${status}&`;
                if (from) url += `from=${from}&`;
                if (to) url += `to=${to}`;
                
                window.location.href = url;
            });

            // Print order
            document.getElementById('printOrderBtn').addEventListener('click', function () {
                window.print();
            });

            // Helper function for status badge class
            function getStatusBadgeClass(status) {
                switch (status) {
                    case 'pending': return 'bg-warning';
                    case 'processing': return 'bg-info';
                    case 'shipped': return 'bg-primary';
                    case 'delivered': return 'bg-success';
                    default: return 'bg-secondary';
                }
            }
        });
    </script>
</body>
</html>
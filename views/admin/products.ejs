<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin - Product Management</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
    <style>
        .admin-sidebar {
            width: 250px;
            height: 100vh;
            position: fixed;
            background-color: #212529;
            color: white;
        }

        .admin-content {
            margin-left: 250px;
            padding: 20px;
        }

        .admin-table th {
            white-space: nowrap;
        }

        @media (max-width: 991px) {
            .admin-sidebar {
                width: 100%;
                height: auto;
                position: relative;
            }

            .admin-content {
                margin-left: 0;
            }
        }
    </style>
</head>

<body>
    <div class="admin-sidebar p-3">
        <h4>ShopEase Admin</h4>
        <hr>
        <ul class="nav flex-column">
            <li class="nav-item">
                <a class="nav-link active text-white" href="products">
                    <i class="bi bi-box-seam"></i> Products
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-white-50" href="orders">
                    <i class="bi bi-receipt"></i> Orders
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-white-50" href="inventory">
                    <i class="bi bi-clipboard-data"></i> Inventory
                </a>
            </li>
        </ul>
    </div>

    <div class="admin-content">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h2>Product Management</h2>
            <button class="btn btn-primary" id="addProductBtn">
                <i class="bi bi-plus-lg"></i> Add Product
            </button>
        </div>

        <div class="card">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table admin-table" id="productsTable">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Image</th>
                                <th>Name</th>
                                <th>Price</th>
                                <th>Discount</th>
                                <th>Stock</th>
                                <th>Category</th>
                                <th>Rating</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- Products will be loaded here -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- Product Modal -->
        <div class="modal fade" id="productModal" tabindex="-1" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="modalTitle">Add New Product</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form id="productForm">
                            <input type="hidden" id="productId">
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label for="productName" class="form-label">Product Name*</label>
                                    <input type="text" class="form-control" id="productName" required>
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label for="productPrice" class="form-label">Price*</label>
                                    <input type="number" step="0.01" class="form-control" id="productPrice" required>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label for="productDiscount" class="form-label">Discount Rate</label>
                                    <input type="number" step="0.01" class="form-control" id="productDiscount" value="0.00">
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label for="productRating" class="form-label">Rating</label>
                                    <input type="number" step="0.1" class="form-control" id="productRating" value="0.0" min="0" max="5">
                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="productDescription" class="form-label">Description*</label>
                                <textarea class="form-control" id="productDescription" rows="3" required></textarea>
                            </div>
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label for="productCategory" class="form-label">Category*</label>
                                    <select class="form-select" id="productCategory" required>
                                        <option value="">Select Category</option>
                                        <option value="Electronics">Electronics</option>
                                        <option value="Clothing">Clothing</option>
                                        <option value="Home">Home & Garden</option>
                                    </select>
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label for="productStock" class="form-label">Stock Quantity*</label>
                                    <input type="number" class="form-control" id="productStock" required>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="productImages" class="form-label">Product Image</label>
                                <input type="file" class="form-control" id="productImages" accept="image/*">
                                <div id="imagePreview" class="mt-2"></div>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-primary" id="saveProductBtn">Save Product</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const productModal = new bootstrap.Modal('#productModal');
            const productForm = document.getElementById('productForm');
            const productsTable = document.getElementById('productsTable').getElementsByTagName('tbody')[0];

            async function loadProducts() {
                try {
                    const response = await fetch('../products/api/all');
                    if (!response.ok) throw new Error('Network response was not ok');
                    
                    const products = await response.json();
                    productsTable.innerHTML = '';

                    products.forEach(product => {
                        const row = productsTable.insertRow();
                        row.innerHTML = `
                            <td>${product.product_id}</td>
                            <td><img src="../assets/images/${product.image}" width="50" alt="${product.name}"></td>
                            <td>${product.name}</td>
                            <td>$${parseFloat(product.price).toFixed(2)}</td>
                            <td>${(parseFloat(product.discount_rate)*100).toFixed(0)}%</td>
                            <td>${product.stock_quantity}</td>
                            <td>${product.category}</td>
                            <td>${product.rating}</td>
                            <td>
                                <button class="btn btn-sm btn-outline-primary edit-btn" data-id="${product.product_id}">
                                    <i class="bi bi-pencil"></i>
                                </button>
                                <button class="btn btn-sm btn-outline-danger delete-btn" data-id="${product.product_id}">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </td>
                        `;
                    });

                    document.querySelectorAll('.edit-btn').forEach(btn => {
                        btn.addEventListener('click', editProduct);
                    });

                    document.querySelectorAll('.delete-btn').forEach(btn => {
                        btn.addEventListener('click', deleteProduct);
                    });
                } catch (error) {
                    console.error('Error loading products:', error);
                    alert('Failed to load products');
                }
            }

            document.getElementById('addProductBtn').addEventListener('click', function () {
                document.getElementById('modalTitle').textContent = 'Add New Product';
                productForm.reset();
                document.getElementById('productId').value = '';
                document.getElementById('imagePreview').innerHTML = '';
                productModal.show();
            });

            async function editProduct(e) {
                const productId = e.currentTarget.getAttribute('data-id');

                try {
                    const response = await fetch(`../products/api/get/${productId}`);
                    if (!response.ok) throw new Error('Network response was not ok');
                    
                    const product = await response.json();

                    if (product) {
                        document.getElementById('modalTitle').textContent = 'Edit Product';
                        document.getElementById('productId').value = product.product_id;
                        document.getElementById('productName').value = product.name;
                        document.getElementById('productPrice').value = product.price;
                        document.getElementById('productDiscount').value = product.discount_rate;
                        document.getElementById('productDescription').value = product.description;
                        document.getElementById('productCategory').value = product.category;
                        document.getElementById('productStock').value = product.stock_quantity;
                        document.getElementById('productRating').value = product.rating;

                        const imagePreview = document.getElementById('imagePreview');
                        imagePreview.innerHTML = '';
                        if (product.image) {
                            const img = document.createElement('img');
                            img.src = `/assets/images/${product.image}`;
                            img.width = 80;
                            img.classList.add('img-thumbnail');
                            imagePreview.appendChild(img);
                        }

                        productModal.show();
                    }
                } catch (error) {
                    console.error('Error fetching product:', error);
                    alert('Failed to load product details');
                }
            }

            document.getElementById('saveProductBtn').addEventListener('click', async function () {
                if (productForm.checkValidity()) {
                    const productId = document.getElementById('productId').value;
                    const productData = {
                        name: document.getElementById('productName').value,
                        price: parseFloat(document.getElementById('productPrice').value),
                        discount_rate: parseFloat(document.getElementById('productDiscount').value) || 0,
                        description: document.getElementById('productDescription').value,
                        category: document.getElementById('productCategory').value,
                        stock_quantity: parseInt(document.getElementById('productStock').value),
                        rating: parseFloat(document.getElementById('productRating').value) || 0,
                        image: 'product' + (Math.random() * 1000).toFixed(0) + '.png'
                    };

                    try {
                        let response;
                        if (productId) {
                            // Update existing product
                            response = await fetch(`../products/api/edit/${productId}`, {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify(productData),
                            });
                        } else {
                            // Create new product
                            response = await fetch('../products/api/add', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify(productData),
                            });
                        }

                        if (!response.ok) throw new Error('Network response was not ok');

                        loadProducts();
                        productModal.hide();
                    } catch (error) {
                        console.error('Error saving product:', error);
                        alert('Failed to save product');
                    }
                } else {
                    productForm.reportValidity();
                }
            });

            async function deleteProduct(e) {
                if (confirm('Are you sure you want to delete this product?')) {
                    const productId = e.currentTarget.getAttribute('data-id');

                    try {
                        const response = await fetch(`../products/api/delete/${productId}`, {
                            method: 'DELETE'
                        });


                        loadProducts();
                    } catch (error) {
                        console.error('Error deleting product:', error);
                        alert('Failed to delete product');
                    }
                }
            }

            document.getElementById('productImages').addEventListener('change', function (e) {
                const file = e.target.files[0];
                const imagePreview = document.getElementById('imagePreview');
                imagePreview.innerHTML = '';

                if (file && file.type.match('image.*')) {
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        const img = document.createElement('img');
                        img.src = e.target.result;
                        img.width = 80;
                        img.classList.add('img-thumbnail');
                        imagePreview.appendChild(img);
                    };
                    reader.readAsDataURL(file);
                }
            });

            loadProducts();
        });
    </script>
</body>
</html>